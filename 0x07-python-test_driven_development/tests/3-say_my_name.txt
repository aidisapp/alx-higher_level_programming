======================
The ``3-say_my_name`` module
======================

Using ``say_my_name``
-------------------

Importing the function from the module:
    >>> say_my_name = __import__("3-say_my_name").say_my_name

Checking for module docstring:
    >>> m = __import__("3-say_my_name").__doc__
    >>> len(m) > 1
    True

Checking for function docstring:
    >>> f = __import__("3-say_my_name").say_my_name.__doc__
    >>> len(f) > 1
    True

Checking for passing None as first name:
    >>> say_my_name(None, "Hello")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

Checking for passing None as last name:
    >>> say_my_name("Hello", None)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

Checking for wrong type as first name:
    >>> say_my_name(1, "Hello")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

Checking for wrong type as last name:
    >>> say_my_name("Hello", [4])
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

Checking for normal use:
    >>> say_my_name("Bill", "Clinton")
    My name is Bill Clinton
    >>> say_my_name("Benjamin", "Franklin")
    My name is Benjamin Franklin

Checking for 1 arg:
    >>> say_my_name("Hello")
    My name is Hello

Checking for more than 2 args:
    # Remove the following test as it is causing an issue
    # >>> say_my_name("Hello", "World", "hi")
